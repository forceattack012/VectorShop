name: Docker Image CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
  HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}
  APP_NAME_BASKET_DB: ${{ 'vector-shop-basketdb' }}
  APP_NAME_BASKET_API: ${{ 'vector-shop-basket-api' }}
  APP_NAME_ORDER_API: ${{ 'vector-shop-ordering-api' }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v2
      - name: Setup .NET 
        uses: actions/setup-dotnet@v1
      - name: Install dotnet ef
        run: dotnet tool install --global dotnet-ef
      - name: Build with dotnet
        run: dotnet build --configuration Release server/VectorShopApp.API/VectorShopApp.API.sln

      - name: Build, Push and Deploy to Heroku #set the whatever name you want to this step
        id: heroku
        uses: snithyanantham/docker-compose-multiple-apps-heroku-deploy@v1.0  # use the latest version of the action
        with:
          email: $HEROKU_EMAIL # your heroku email
          api_key: $HEROKU_API_KEY # your  heroku api key
          docker_compose_file: 'docker-compose.heroku.yml' # set the path to the folder where the docker-compose file is located
          heroku_apps: '[{"imagename":"orderingapi","appname":"$APP_NAME_ORDER_API","apptype":"web"}, {"imagename":"redis", "appname":"$APP_NAME_BASKET_DB","apptype":"web"},{"imagename":"basketapi", "appname":"$APP_NAME_ORDER_API","apptype":"web"}]' # List of Docker Image name, Heroku app and Heroku app type  
  test:
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
      - name: run tests
        run:  dotnet test server/VectorShopApp.API/VectorShopApp.API.sln --configuration Release

  # deploy:
  #   runs-on: ubuntu-latest
  #   steps: 
  #     - uses: actions/checkout@v2
  #     - name: Docker Build
  #     - name: Publish

    # steps:
    # - uses: actions/checkout@v2
    # - name:  Build the stack
    #   run: docker-compose -f docker-compose.yml build
    # - name: test up
    #   run: docker-compose -f docker-compose.yml up -d
